/users/update_assignedslot:
  put:
    summary: "Update Assigned Slot for a User"
    description: "Updates the assigned slot for a user identified by their 'name'. Both 'name' and 'assignedslot' are required. The request fails if either is missing or if the user is not found. Returns an error if the MySQL database is unavailable."
    tags: ["Users"]
    parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
              description: "The name of the user whose assigned slot is being updated."
              example: "testuser"
            assignedslot:
              type: "string"
              description: "The new assigned slot for the user."
              example: "slot2"
          required:
            - name
            - assignedslot
    responses:
      '200':
        description: "Assigned slot successfully updated"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                  example: "Assigned slot updated successfully"
      '400':
        description: "Bad Request if 'name' or 'assignedslot' are missing"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Both 'name' and 'assignedslot' must be provided"
      '404':
        description: "Not Found if no user with the provided name exists"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "No user found with the given name"
      '500':
        description: "Internal Server Error if there is a MySQL issue or connection failure"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "MySQL database not responding, please check the database service"
